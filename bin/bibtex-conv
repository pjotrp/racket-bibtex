#lang racket

(require json)

#|
(define verbose-mode (make-parameter #f))

(define files-to-compile
  (command-line
   #:program "bibtex-conv"
   #:once-each
   [("-v" "--verbose") "Compile with verbose messages"
                       (verbose-mode #t)]
   #:args args args
))

(display files-to-compile)
|#

(define (reader1 func)
  (define (read-lines port func)
    (let loop ()
      (let [(line (read-line port))]
        (if (not (eof-object? line))
            (begin
              (func line)
              (loop))
            #t
            ))))
  (begin
    ;; first read stdin
    (read-lines (current-input-port) func)
    ;; next read the other filenames on the command-line
    (for ([fn (current-command-line-arguments)])
      (call-with-input-file fn
        (lambda (port)
          (read-lines port func)
    )))))

(define-syntax-rule (argf/each1 line body)
  (reader1 (lambda (line)
            body)))

; (argf/each1 line
;  (write (string-append "-" line)))

;; Try again using streams

(for ([line (in-lines (current-input-port))])
  (write (string-append "-" line)))
(for ([fn (current-command-line-arguments)])
  (call-with-input-file fn
    (lambda (port)
      (for ([line (in-lines port)])
        (write (string-append "-" line)))
)))

;; "-a""-b""-c"#f
