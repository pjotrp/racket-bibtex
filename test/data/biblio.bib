@article{Prins:2019,
  author       = {Prins, P. and Smant, G. and Arends, D. and Mulligan, M. K. and Williams, R. W. and Jansen, R. C.},
  title        = {{Systems Genetics for Evolutionary Studies}},
  journal      = {Methods Mol Biol},
  year         = {2019},
  volume       = {1910},
  pages        = {635-652},
  doi          = {10.1007/978-1-4939-9074-0_21},
  url          = {http://www.ncbi.nlm.nih.gov/pubmed/31278680},
  abstract     = {Systems genetics combines high-throughput genomic data with genetic analysis. In this chapter, we review and discuss application of systems genetics in the context of evolutionary studies, in which high-throughput molecular technologies are being combined with quantitative trait locus (QTL) analysis in segregating populations.The recent explosion of high-throughput data-measuring thousands of RNAs, proteins, and metabolites, using deep sequencing, mass spectrometry, chromatin, methyl-DNA immunoprecipitation, etc.-allows the dissection of causes of genetic variation underlying quantitative phenotypes of all types. To deal with the sheer amount of data, powerful statistical tools are needed to analyze multidimensional relationships and to extract valuable information and new modes and mechanisms of changes both within and between species. In the context of evolutionary computational biology, a well-designed experiment and the right population can help dissect complex traits likely to be under selection using proven statistical methods for associating phenotypic variation with chromosomal locations.Recent evolutionary expression QTL (eQTL) studies focus on gene expression adaptations, mapping the gene expression landscape, and, tentatively, define networks of transcripts and proteins that are jointly modulated sets of eQTL networks. Here, we discuss the possibility of introducing an evolutionary "prior" in the form of gene families displaying evidence of positive selection, and using that prior in the context of an eQTL experiment for elucidating host-pathogen protein-protein interactions.Here we review one exemplar evolutionairy eQTL experiment and discuss experimental design, choice of platforms, analysis methods, scope, and interpretation of results. In brief we highlight how eQTL are defined; how they are used to assemble interacting and causally connected networks of RNAs, proteins, and metabolites; and how some QTLs can be efficiently converted to reasonably well-defined sequence variants.},
  keywords  = "genenetwork"

}

@article{Strozzi:2019,
  author       = {Strozzi, F. and Janssen, R. and Wurmus, R. and Crusoe, M. R. and Githinji, G. and Di Tommaso, P. and Belhachemi, D. and Moller, S. and Smant, G. and de Ligt, J. and Prins, P.},
  title        = {{Scalable Workflows and Reproducible Data Analysis for Genomics}},
  journal      = {Methods Mol Biol},
  year         = {2019},
  volume       = {1910},
  pages        = {723-745},
  doi          = {10.1007/978-1-4939-9074-0_24},
  url          = {http://www.ncbi.nlm.nih.gov/pubmed/31278683},
  abstract     = {Biological, clinical, and pharmacological research now often involves analyses of genomes, transcriptomes, proteomes, and interactomes, within and between individuals and across species. Due to large volumes, the analysis and integration of data generated by such high-throughput technologies have become computationally intensive, and analysis can no longer happen on a typical desktop computer.In this chapter we show how to describe and execute the same analysis using a number of workflow systems and how these follow different approaches to tackle execution and reproducibility issues. We show how any researcher can create a reusable and reproducible bioinformatics pipeline that can be deployed and run anywhere. We show how to create a scalable, reusable, and shareable workflow using four different workflow engines: the Common Workflow Language (CWL), Guix Workflow Language (GWL), Snakemake, and Nextflow. Each of which can be run in parallel.We show how to bundle a number of tools used in evolutionary biology by using Debian, GNU Guix, and Bioconda software distributions, along with the use of container systems, such as Docker, GNU Guix, and Singularity. Together these distributions represent the overall majority of software packages relevant for biology, including PAML, Muscle, MAFFT, MrBayes, and BLAST. By bundling software in lightweight containers, they can be deployed on a desktop, in the cloud, and, increasingly, on compute clusters.By bundling software through these public software distributions, and by creating reproducible and shareable pipelines using these workflow engines, not only do bioinformaticians have to spend less time reinventing the wheel but also do we get closer to the ideal of making science reproducible. The examples in this chapter allow a quick comparison of different solutions.},
  note      = "highly accessed",
  keywords  = "genenetwork,group"

}

@article{Bonnal:2019,
  author       = {Bonnal, R. J. P. and Yates, A. and Goto, N. and Gautier, L. and Willis, S. and Fields, C. and Katayama, T. and Prins, P.},
  title        = {{Sharing Programming Resources Between Bio* Projects}},
  journal      = {Methods Mol Biol},
  year         = {2019},
  volume       = {1910},
  pages        = {747-766},
  doi          = {10.1007/978-1-4939-9074-0_25},
  url          = {http://www.ncbi.nlm.nih.gov/pubmed/31278684},
  abstract     = {Open-source software encourages computer programmers to reuse software components written by others. In evolutionary bioinformatics, open-source software comes in a broad range of programming languages, including C/C++, Perl, Python, Ruby, Java, and R. To avoid writing the same functionality multiple times for different languages, it is possible to share components by bridging computer languages and Bio* projects, such as BioPerl, Biopython, BioRuby, BioJava, and R/Bioconductor.In this chapter, we compare the three principal approaches for sharing software between different programming languages: by remote procedure call (RPC), by sharing a local "call stack," and by calling program to programs. RPC provides a language-independent protocol over a network interface; examples are SOAP and Rserve. The local call stack provides a between-language mapping, not over the network interface but directly in computer memory; examples are R bindings, RPy, and languages sharing the Java virtual machine stack. This functionality provides strategies for sharing of software between Bio* projects, which can be exploited more often.Here, we present cross-language examples for sequence translation and measure throughput of the different options. We compare calling into R through native R, RSOAP, Rserve, and RPy interfaces, with the performance of native BioPerl, Biopython, BioJava, and BioRuby implementations and with call stack bindings to BioJava and the European Molecular Biology Open Software Suite (EMBOSS).In general, call stack approaches outperform native Bio* implementations, and these, in turn, outperform "RPC"-based approaches. To test and compare strategies, we provide a downloadable Docker container with all examples, tools, and libraries included.},
  keywords  = "genenetwork"

}

@article{Prins:2012,
  author       = {Prins, P. and Goto, N. and Yates, A. and Gautier, L. and Willis, S. and Fields, C. and Katayama, T.},
  title        = {{Sharing programming resources between Bio* projects through remote procedure call and native call stack strategies}},
  journal      = {Methods Mol Biol},
  year         = {2012},
  volume       = {856},
  pages        = {513-527},
  doi          = {10.1007/978-1-61779-585-5_21},
  url          = {http://www.ncbi.nlm.nih.gov/pubmed/22399473},
  abstract     = {Open-source software (OSS) encourages computer programmers to reuse software components written by others. In evolutionary bioinformatics, OSS comes in a broad range of programming languages, including C/C++, Perl, Python, Ruby, Java, and R. To avoid writing the same functionality multiple times for different languages, it is possible to share components by bridging computer languages and Bio* projects, such as BioPerl, Biopython, BioRuby, BioJava, and R/Bioconductor. In this chapter, we compare the two principal approaches for sharing software between different programming languages: either by remote procedure call (RPC) or by sharing a local call stack. RPC provides a language-independent protocol over a network interface; examples are RSOAP and Rserve. The local call stack provides a between-language mapping not over the network interface, but directly in computer memory; examples are R bindings, RPy, and languages sharing the Java Virtual Machine stack. This functionality provides strategies for sharing of software between Bio* projects, which can be exploited more often. Here, we present cross-language examples for sequence translation, and measure throughput of the different options. We compare calling into R through native R, RSOAP, Rserve, and RPy interfaces, with the performance of native BioPerl, Biopython, BioJava, and BioRuby implementations, and with call stack bindings to BioJava and the European Molecular Biology Open Software Suite. In general, call stack approaches outperform native Bio* implementations and these, in turn, outperform RPC-based approaches. To test and compare strategies, we provide a downloadable BioNode image with all examples, tools, and libraries included. The BioNode image can be run on VirtualBox-supported operating systems, including Windows, OSX, and Linux.},
  keywords     = "genenetwork"
}

@article{Broman:2019,
  author       = {Broman, K. W. and Gatti, D. M. and Simecek, P. and Furlotte, N. A. and Prins, P. and Sen, S. and Yandell, B. S. and Churchill, G. A.},
  title        = {{R/qtl2: Software for Mapping Quantitative Trait Loci with High-Dimensional Data and Multiparent Populations}},
  journal      = {Genetics},
  year         = {2019},
  volume       = {211},
  number       = {2},
  pages        = {495-502},
  doi          = {10.1534/genetics.118.301595},
  url          = {http://www.ncbi.nlm.nih.gov/pubmed/30591514},
  abstract     = {R/qtl2 is an interactive software environment for mapping quantitative trait loci (QTL) in experimental populations. The R/qtl2 software expands the scope of the widely used R/qtl software package to include multiparent populations derived from more than two founder strains, such as the Collaborative Cross and Diversity Outbred mice, heterogeneous stocks, and MAGIC plant populations. R/qtl2 is designed to handle modern high-density genotyping data and high-dimensional molecular phenotypes, including gene expression and proteomics. R/qtl2 includes the ability to perform genome scans using a linear mixed model to account for population structure, and also includes features to impute SNPs based on founder strain genomes and to carry out association mapping. The R/qtl2 software provides all of the basic features needed for QTL mapping, including graphical displays and summary reports, and it can be extended through the creation of add-on packages. R/qtl2, which is free and open source software written in the R and C++ programming languages, comes with a test framework.},
  keywords     = "genenetwork"

}

@article{Said:2018,
  author       = {Said Mohammed, K. and Kibinge, N. and Prins, P. and Agoti, C. N. and Cotten, M. and Nokes, D. J. and Brand, S. and Githinji, G.},
  title        = {{Evaluating the performance of tools used to call minority variants from whole genome short-read data}},
  keywords     = "genenetwork",
  journal      = {Wellcome Open Res},
  year         = {2018},
  volume       = {3},
  pages        = {21},
  doi          = {10.12688/wellcomeopenres.13538.2},
  url          = {http://www.ncbi.nlm.nih.gov/pubmed/30483597},
  abstract     = {Background: High-throughput whole genome sequencing facilitates investigation of minority virus sub-populations from virus positive samples. Minority variants are useful in understanding within and between host diversity, population dynamics and can potentially assist in elucidating person-person transmission pathways. Several minority variant callers have been developed to describe low frequency sub-populations from whole genome sequence data. These callers differ based on bioinformatics and statistical methods used to discriminate sequencing errors from low-frequency variants. Methods: We evaluated the diagnostic performance and concordance between published minority variant callers used in identifying minority variants from whole-genome sequence data from virus samples. We used the ART-Illumina read simulation tool to generate three artificial short-read datasets of varying coverage and error profiles from an RSV reference genome. The datasets were spiked with nucleotide variants at predetermined positions and frequencies. Variants were called using FreeBayes, LoFreq, Vardict, and VarScan2. The variant callers' agreement in identifying known variants was quantified using two measures; concordance accuracy and the inter-caller concordance. Results: The variant callers reported differences in identifying minority variants from the datasets. Concordance accuracy and inter-caller concordance were positively correlated with sample coverage. FreeBayes identified the majority of variants although it was characterised by variable sensitivity and precision in addition to a high false positive rate relative to the other minority variant callers and which varied with sample coverage. LoFreq was the most conservative caller. Conclusions: We conducted a performance and concordance evaluation of four minority variant calling tools used to identify and quantify low frequency variants. Inconsistency in the quality of sequenced samples impacts on sensitivity and accuracy of minority variant callers. Our study suggests that combining at least three tools when identifying minority variants is useful in filtering errors when calling low frequency variants.},

}

@article{Mulligan:2018,
  author       = {Mulligan, M. K. and Zhao, W. and Dickerson, M. and Arends, D. and Prins, P. and Cavigelli, S. A. and Terenina, E. and Mormede, P. and Lu, L. and Jones, B. C.},
  title        = {{Genetic Contribution to Initial and Progressive Alcohol Intake Among Recombinant Inbred Strains of Mice}},
  keywords     = "genenetwork",
  journal      = {Front Genet},
  year         = {2018},
  volume       = {9},
  pages        = {370},
  doi          = {10.3389/fgene.2018.00370},
  url          = {http://www.ncbi.nlm.nih.gov/pubmed/30319684},
  abstract     = {We profiled individual differences in alcohol consumption upon initial exposure and during 5 weeks of voluntary alcohol intake in female mice from 39 BXD recombinant inbred strains and parents using the drinking in the dark (DID) method. In this paradigm, a single bottle of 20\% (v/v) alcohol was presented as the sole liquid source for 2 or 4 h starting 3 h into the dark cycle. For 3 consecutive days mice had access to alcohol for 2 h followed by a 4th day of 4 h access and 3 intervening days where alcohol was not offered. We followed this regime for 5 weeks. For most strains, 2 or 4 h alcohol intake increased over the 5-week period, with some strains demonstrating greatly increased intake. There was considerable and heritable genetic variation in alcohol consumption upon initial early and sustained weekly exposure. Two different mapping algorithms were used to identify QTLs associated with alcohol intake and only QTLs detected by both methods were considered further. Multiple suggestive QTLs for alcohol intake on chromosomes (Chrs) 2, 6, and 12 were identified for the first 4 h exposure. Suggestive QTLs for sustained intake during later weeks were identified on Chrs 4 and 8. Thirty high priority candidate genes, including Entpd2, Per3, and Fto were nominated for early and sustained alcohol intake QTLs. In addition, a suggestive QTL on Chr 15 was detected for change in 2 h alcohol intake over the duration of the study and Adcy8 was identified as a strong candidate gene. Bioinformatic analyses revealed that early and sustained alcohol intake is likely driven by genes and pathways involved in signaling, and/or immune and metabolic function, while a combination of epigenetic factors related to alcohol experience and genetic factors likely drives progressive alcohol intake.},

}

@article{Li:2018,
  author       = {Li, H. and Wang, X. and Rukina, D. and Huang, Q. and Lin, T. and Sorrentino, V. and Zhang, H. and Bou Sleiman, M. and Arends, D. and McDaid, A. and Luan, P. and Ziari, N. and Velazquez-Villegas, L. A. and Gariani, K. and Kutalik, Z. and Schoonjans, K. and Radcliffe, R. A. and Prins, P. and Morgenthaler, S. and Williams, R. W. and Auwerx, J.},
  title        = {{An Integrated Systems Genetics and Omics Toolkit to Probe Gene Function}},
  keywords     = "genenetwork",
  journal      = {Cell Syst},
  year         = {2018},
  volume       = {6},
  number       = {1},
  pages        = {90-102.e4},
  doi          = {10.1016/j.cels.2017.10.016},
  url          = {http://www.ncbi.nlm.nih.gov/pubmed/29199021},
  abstract     = {Identifying genetic and environmental factors that impact complex traits and common diseases is a high biomedical priority. Here, we developed, validated, and implemented a series of multi-layered systems approaches, including (expression-based) phenome-wide association, transcriptome-/proteome-wide association, and (reverse-) mediation analysis, in an open-access web server (systems-genetics.org) to expedite the systems dissection of gene function. We applied these approaches to multi-omics datasets from the BXD mouse genetic reference population, and identified and validated associations between genes and clinical and molecular phenotypes, including previously unreported links between Rpl26 and body weight, and Cpt1a and lipid metabolism. Furthermore, through mediation and reverse-mediation analysis we established regulatory relations between genes, such as the co-regulation of BCKDHA and BCKDHB protein levels, and identified targets of transcription factors E2F6, ZFP277, and ZKSCAN1. Our multifaceted toolkit enabled the identification of gene-gene and gene-phenotype links that are robust and that translate well across populations and species, and can be universally applied to any populations with multi-omics datasets.},

}

@article{Mulligan:2017,
  author       = {Mulligan, M. K. and Mozhui, K. and Prins, P. and Williams, R. W.},
  title        = {{GeneNetwork: A Toolbox for Systems Genetics}},
  keywords     = "genenetwork",
  journal      = {Methods Mol Biol},
  year         = {2017},
  volume       = {1488},
  pages        = {75-120},
  doi          = {10.1007/978-1-4939-6427-7_4},
  url          = {http://www.ncbi.nlm.nih.gov/pubmed/27933521},
  abstract     = {The goal of systems genetics is to understand the impact of genetic variation across all levels of biological organization, from mRNAs, proteins, and metabolites, to higher-order physiological and behavioral traits. This approach requires the accumulation and integration of many types of data, and also requires the use of many types of statistical tools to extract relevant patterns of covariation and causal relations as a function of genetics, environment, stage, and treatment. In this protocol we explain how to use the GeneNetwork web service, a powerful and free online resource for systems genetics. We provide workflows and methods to navigate massive multiscalar data sets and we explain how to use an extensive systems genetics toolkit for analysis and synthesis. Finally, we provide two detailed case studies that take advantage of human and mouse cohorts to evaluate linkage between gene variants, addiction, and aging.},

}

@article{Nijveen:2017,
  author       = {Nijveen, H. and Ligterink, W. and Keurentjes, J. J. and Loudet, O. and Long, J. and Sterken, M. G. and Prins, P. and Hilhorst, H. W. and de Ridder, D. and Kammenga, J. E. and Snoek, B. L.},
  title        = {{AraQTL - workbench and archive for systems genetics in Arabidopsis thaliana}},
  keywords     = "genenetwork",
  journal      = {Plant J},
  year         = {2017},
  volume       = {89},
  number       = {6},
  pages        = {1225-1235},
  doi          = {10.1111/tpj.13457},
  url          = {http://www.ncbi.nlm.nih.gov/pubmed/27995664},
  abstract     = {Genetical genomics studies uncover genome-wide genetic interactions between genes and their transcriptional regulators. High-throughput measurement of gene expression in recombinant inbred line populations has enabled investigation of the genetic architecture of variation in gene expression. This has the potential to enrich our understanding of the molecular mechanisms affected by and underlying natural variation. Moreover, it contributes to the systems biology of natural variation, as a substantial number of experiments have resulted in a valuable amount of interconnectable phenotypic, molecular and genotypic data. A number of genetical genomics studies have been published for Arabidopsis thaliana, uncovering many expression quantitative trait loci (eQTLs). However, these complex data are not easily accessible to the plant research community, leaving most of the valuable genetic interactions unexplored as cross-analysis of these studies is a major effort. We address this problem with AraQTL (http://www.bioinformatics.nl/Ara QTL/), an easily accessible workbench and database for comparative analysis and meta-analysis of all published Arabidopsis eQTL datasets. AraQTL provides a workbench for comparing, re-using and extending upon the results of these experiments. For example, one can easily screen a physical region for specific local eQTLs that could harbour candidate genes for phenotypic QTLs, or detect gene-by-environment interactions by comparing eQTLs under different conditions.},

}

@misc{Barba:2019,
 title={Giving software its due through community-driven review and publication},
 keywords     = "genenetwork",
 url={osf.io/f4vx6},
 DOI={10.31219/osf.io/f4vx6},
 publisher={OSF Preprints},
 author={Barba, Lorena A and Bazán, Juanjo and Brown, Jed and Guimera, Roman V and Gymrek, Melissa and Hanna, Alex and Heagy, Lindsey J and Huff, Kathryn D and Katz, Daniel S and Madan, Christopher R and et al.},
 year={2019},
 month={4}
}

@techreport{Bavier:2019,
  TITLE = {{Guix-HPC Activity Report 2017--2018}},
  AUTHOR = {Bavier, Eric and Court{\`e}s, Ludovic and Garlick, Paul and Prins, Pjotr and Wurmus, Ricardo},
  keywords     = "genenetwork",
  URL = {https://hal.inria.fr/hal-02056461},
  TYPE = {Technical Report},
  INSTITUTION = {{Inria Bordeaux Sud-Ouest ; Max Delbr{\"u}ck Center for Molecular Medicine ; Cray, Inc. ; Tourbillion Technology}},
  YEAR = {2019},
  MONTH = Feb,
  PDF = {https://hal.inria.fr/hal-02056461/file/activity-report-2018.pdf},
  HAL_ID = {hal-02056461},
  HAL_VERSION = {v1},
}


@article {Ashbrook:2019,
	author = {Ashbrook, David G. and Arends, Danny and Prins, Pjotr and Mulligan, Megan K. and Roy, Suheeta and Williams, Evan G. and Lutz, Cathleen M. and Valenzuela, Alicia and Bohl, Casey J. and Ingels, Jesse F. and McCarty, Melinda S. and Centeno, Arthur G. and Hager, Reinmar and Auwerx, Johan and Sen, Saunak and Lu, Lu and Williams, Robert W.},
	title = {The expanded BXD family of mice: A cohort for experimental systems genetics and precision medicine},
	elocation-id = {672097},
  keywords     = "genenetwork",
	year = {2019},
	doi = {10.1101/672097},
	publisher = {Cold Spring Harbor Laboratory},
	abstract = {The challenge of precision medicine is to model complex interactions among DNA variants, sets of phenotypes, and complex environmental factors and confounders. We have expanded the BXD family, creating a powerful and extensible test bed for experimental precision medicine and an ideal cohort to study gene-by-environmental interactions.These BXD segregate for over 6 million variants, with a mean minor allele frequency close to 0.5. We have increased the family two-fold to 150 inbred strains, all derived from C57BL/6J and DBA/2J. We have also generated updated and comprehensive genotypes and an unrivaled deep phenome.Approximately 10,000 recombinations have been located, allowing precision of quantitative trait loci mapping of {\textpm}2.0 Mb over much of the genome and {\textpm}0.5 Mb for Mendelian loci. The BXD phenome includes more than 100 {\textquoteleft}omics data sets and \&gt;7000 quantitative and clinical phenotypes, all of which is publicly available.The BXD family is an enduring, collaborative, and replicable resource to test causal and mechanistic links between genomes and phenomes at many stages and under a wide variety of treatments and interventions.List of abbreviationsADAlzheimer{\textquoteright}s DiseaseAIadvanced intercrossB6C57BL/6J mouse strainBLASTBasic Local Alignment Search ToolBXDBXD family of recombinant inbred strains of mice, produced by crossing the B6 and D2 parental strainsCCCollaborative CrossChrChromosomecMcentimorganD2DBA/2J mouse strainDODiversity OutbredDXdiallel crossEMRselectronic medical recordseQTLExpression quantitative trait locusF2Filial generation 2GEMMAGenome-wide Efficient Mixed Model AssociationGigaMUGAGiga Mouse Universal Genotyping ArrayGNGeneNetwork (http://genenetwork.org)GN2GeneNetwork2 (http://gn2.genenetwork.org)GWASgenome-wide association studyH2ix̅heritability of isogenic strain meansH2RIx̅heritability of recombinant inbred strain meansHMDPHybrid Mouse Diversity PanelIMPCInternational Mouse Phenotyping ConsortiumJAXThe Jackson LaboratoryKbkilobaseKOMPKnockout Mouse projectLODlogarithm of oddsLRSlikelihood ratio statisticMbMegabaseMMRRCMutant Mouse Resource \&amp; Research CentersMUGAMouse Universal Genotyping ArraynRecPnumber of observed recombinations from one position to the nextnRecSnumber of observed recombinations per strainPheWASphenome-wide association studiesQTquantitative traitQTLquantitative trait locusr2Coefficient of determinationRIRecombinant inbredRIXsRecombinant inbred intercrossesSEStandard error of the meanSNPsingle nucleotide polymorphismUTHSCUniversity of Tennessee Health Science Center},
	URL = {https://www.biorxiv.org/content/early/2019/07/08/672097},
	eprint = {https://www.biorxiv.org/content/early/2019/07/08/672097.full.pdf},
	journal = {bioRxiv}
}


@article{Sloan:2016,
author = {Sloan, Zachary and Arends, Danny and Broman, Karl and Centeno, Arthur and Furlotte, Nicholas and Nijveen, Harm and Yan, Lei and Zhou, Xiang and Williams, Robert and Prins, Pjotr},
year = {2016},
keywords     = "genenetwork",
month = {06},
pages = {8-10},
title = {GeneNetwork: framework for web-based genetics},
journal = {The Journal of Open Source Software},
doi = {10.21105/joss.00025}
}


@article{Arends:2016,
author = {Arends, Danny and Li, Yang and Brockmann, Gudrun and Jansen, Ritsert and Williams, Robert and Prins, Pjotr},
keywords     = "genenetwork",
year = {2016},
month = {10},
pages = {},
title = {Correlation Trait Loci (CTL) mapping: phenotype network inference subject to genotype},
volume = {1},
journal = {The Journal of Open Source Software},
doi = {10.21105/joss.00087}
}


@article{Smith:2017,
author = {Smith, Arfon and Niemeyer, Kyle and Katz, Daniel S. and Barba, Lorena and Githinji, George and Gymrek, Melissa and Huff, Kathryn and Madan, Christopher and Mayes, Abigail and Moerman, Kevin and Prins, Pjotr and Ram, Karthik and Rokem, Ariel and Teal, Tracy and Guimera, Roman and Vanderplas, Jacob},
year = {2017},
keywords     = "genenetwork",
month = {07},
pages = {},
title = {Journal of Open Source Software (JOSS): Design and first-year review},
volume = {4},
journal = {PeerJ Computer Science},
doi = {10.7717/peerj-cs.147}
}
